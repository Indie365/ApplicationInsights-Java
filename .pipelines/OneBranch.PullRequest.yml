#################################################################################
#   Onebranch Pipelines - PR MSBuild (CDPXMigrated)                             #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

trigger: main # https://aka.ms/obpipelines/triggers

parameters: # parameters are shown up in ADO UI in a build queue time
  - name: 'debug'
    displayName: 'Enable debug output'
    type: boolean
    default: false

variables:
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
  system.debug: ${{ parameters.debug }}
  ENABLE_PRS_DELAYSIGN: 0
  ROOT: $(Build.SourcesDirectory)
  REPOROOT: $(Build.SourcesDirectory)
  OUTPUTROOT: $(REPOROOT)\out
  NUGET_XMLDOC_MODE: none

  WindowsContainerImage: 'cdpxwin1809.azurecr.io/global/vse2019:latest' # Docker image which is used to build the project https://aka.ms/obpipelines/containers

resources:
  repositories:
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/OneBranch.NonOfficial.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    globalSdl: # https://aka.ms/obpipelines/sdl
      tsa:
        enabled: false # onebranch publish all sdl results to TSA. If TSA is disabled all SDL tools will forced into 'break' build mode.
      binskim:
        break: true # always break the build on binskim issues. You can disable it by setting to 'false'
      policheck:
        break: true # always break the build on policheck issues. You can disable it by setting to 'false'

    stages:
      - stage: build
        jobs:
          - job: main
            pool:
              type: windows  # read more about custom job pool types at https://aka.ms/obpipelines/yaml/jobs

            variables: # More settings at https://aka.ms/obpipelines/yaml/jobs
              ob_outputDirectory: '$(Build.SourcesDirectory)\out' # this directory is uploaded to pipeline artifacts, reddog and cloudvault. More info at https://aka.ms/obpipelines/artifacts
              ob_sdl_binskim_break: true # https://aka.ms/obpipelines/sdl
              # ob_sdl_baseline_baselineFile: $(Build.SourcesDirectory)\.gdn\build.nonofficial.gdnbaselines
              #              ob_sdl_codeSignValidation_excludes: -|**\*.js # Example -|**\*.js;-|**\Test*\**
              ob_artifactBaseName: 'drop'

              steps:
                - task: onebranch.pipeline.version@1 # generates automatic version. For other versioning options check https://aka.ms/obpipelines/versioning
                  displayName: 'ApplicationInsights-Java'
                  inputs:
                    system: 'RevisionCounter'
                    major: '0'
                    minor: '0'
                    exclude_commit: true

                # skip signing
                - task: onebranch.pipeline.signing@1
                  inputs:
                    command: 'sign'
                    signing_profile: 'none'

                # one CmdLine@2 for each CDPx stage (restore/build/package/test) as needed
                - task: CmdLine@2
                  displayName: 'Run Clean'
                  inputs:
                    script: '$(Build.SourcesDirectory)\.scripts\gradle.cmd test clean'
                    workingDirectory: '$(Build.SourcesDirectory)'

                - task: CmdLine@2
                  displayName: 'Run Tests'
                  inputs:
                    script: '$(Build.SourcesDirectory)\.scripts\gradle.cmd test'
                    workingDirectory: '$(Build.SourcesDirectory)'

                - task: CopyFiles@2
                  displayName: "Copy Test Results"
                  inputs:
                    testRunner: JUnit
                    SourceFolder: '**\build\test-results\test\**\*'
                    Contents: '**\*'
                    TargetFolder: '$(Build.SourcesDirectory)\out\outputs\test'
                    failTaskOnFailedTests: true

                - task: CopyFiles@2
                  displayName: "Copy Test Logs"
                  inputs:
                    SourceFolder: '**\build\reports\tests\**\*'
                    Contents: '**\*'
                    TargetFolder: '$(Build.SourcesDirectory)\out\outputs\logs'

                - task: CmdLine@2
                  displayName: 'Assemble'
                  inputs:
                    script: '$(Build.SourcesDirectory)\.scripts\gradle.cmd :agent:agent:assemble --offline'
                    workingDirectory: '$(Build.SourcesDirectory)'

                - task: CopyFiles@2
                  displayName: "Copy Artifact"
                  inputs:
                    SourceFolder: '$(Build.SourcesDirectory)\agent\agent\build\libs'
                    Contents: '*.jar'
                    TargetFolder: '$(Build.SourcesDirectory)\out\outputs\build\Artifacts'